kind: Deployment
apiVersion: apps/v1
metadata:
  name: my-landing
  namespace: my-landing
  labels:
    app.kubernetes.io/name: 'my-landing'
    app.kubernetes.io/part-of: 'my-landing'
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: my-landing
  template:
    metadata:
      labels:
        app.kubernetes.io/name: 'my-landing'
        app.kubernetes.io/part-of: 'my-landing'
    spec:
      containers:
      - name: my-landing
        image: localhost:32000/my-landing:latest
        imagePullPolicy: Always
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: "0.5"
            memory: 1Gi
        ports:
        - containerPort: 8080

---

kind: Service
apiVersion: v1
metadata:
  name: my-landing
  namespace: my-landing
  labels:
    app.kubernetes.io/name: 'my-landing'
    app.kubernetes.io/part-of: 'my-landing'
spec:
  selector:
    app.kubernetes.io/name: my-landing
  type: ClusterIP
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 8080

---

kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: http-ingress-my-landing
  namespace: my-landing
  annotations:
    cert-manager.io/cluster-issuer: "lets-encrypt"
    kubernetes.io/ingress.class: "public"
    nginx.ingress.kubernetes.io/rewrite-target: '/$2'
    external-dns.alpha.kubernetes.io/target: "164.132.202.72"
  labels:
    app.kubernetes.io/part-of: 'my-landing'
spec:
  tls:
  - hosts:
    - alopez.fr
    secretName: my-landing-tls
  rules:
  - host: alopez.fr
    http:
      paths:
      - backend:
          service:
            name: my-landing
            port:
              number: 80
        pathType: Prefix
        path: /()(.*)

